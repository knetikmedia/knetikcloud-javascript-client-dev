/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KnetikCloud);
  }
}(this, function(expect, KnetikCloud) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KnetikCloud.MessagingApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MessagingApi', function() {
    describe('compileMessageTemplate', function() {
      it('should call compileMessageTemplate successfully', function(done) {
        //uncomment below and update the code to test compileMessageTemplate
        //instance.compileMessageTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createMessageTemplate', function() {
      it('should call createMessageTemplate successfully', function(done) {
        //uncomment below and update the code to test createMessageTemplate
        //instance.createMessageTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteMessageTemplate', function() {
      it('should call deleteMessageTemplate successfully', function(done) {
        //uncomment below and update the code to test deleteMessageTemplate
        //instance.deleteMessageTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMessageTemplate', function() {
      it('should call getMessageTemplate successfully', function(done) {
        //uncomment below and update the code to test getMessageTemplate
        //instance.getMessageTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMessageTemplates', function() {
      it('should call getMessageTemplates successfully', function(done) {
        //uncomment below and update the code to test getMessageTemplates
        //instance.getMessageTemplates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendMessage', function() {
      it('should call sendMessage successfully', function(done) {
        //uncomment below and update the code to test sendMessage
        //instance.sendMessage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendRawEmail', function() {
      it('should call sendRawEmail successfully', function(done) {
        //uncomment below and update the code to test sendRawEmail
        //instance.sendRawEmail(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendRawPush', function() {
      it('should call sendRawPush successfully', function(done) {
        //uncomment below and update the code to test sendRawPush
        //instance.sendRawPush(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendRawSMS', function() {
      it('should call sendRawSMS successfully', function(done) {
        //uncomment below and update the code to test sendRawSMS
        //instance.sendRawSMS(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendTemplatedEmail', function() {
      it('should call sendTemplatedEmail successfully', function(done) {
        //uncomment below and update the code to test sendTemplatedEmail
        //instance.sendTemplatedEmail(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendTemplatedPush', function() {
      it('should call sendTemplatedPush successfully', function(done) {
        //uncomment below and update the code to test sendTemplatedPush
        //instance.sendTemplatedPush(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendTemplatedSMS', function() {
      it('should call sendTemplatedSMS successfully', function(done) {
        //uncomment below and update the code to test sendTemplatedSMS
        //instance.sendTemplatedSMS(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendWebsocket', function() {
      it('should call sendWebsocket successfully', function(done) {
        //uncomment below and update the code to test sendWebsocket
        //instance.sendWebsocket(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateMessageTemplate', function() {
      it('should call updateMessageTemplate successfully', function(done) {
        //uncomment below and update the code to test updateMessageTemplate
        //instance.updateMessageTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
