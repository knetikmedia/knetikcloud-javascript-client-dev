/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KnetikCloud);
  }
}(this, function(expect, KnetikCloud) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KnetikCloud.GamificationAchievementsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GamificationAchievementsApi', function() {
    describe('createAchievement', function() {
      it('should call createAchievement successfully', function(done) {
        //uncomment below and update the code to test createAchievement
        //instance.createAchievement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAchievementTemplate', function() {
      it('should call createAchievementTemplate successfully', function(done) {
        //uncomment below and update the code to test createAchievementTemplate
        //instance.createAchievementTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAchievement', function() {
      it('should call deleteAchievement successfully', function(done) {
        //uncomment below and update the code to test deleteAchievement
        //instance.deleteAchievement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAchievementTemplate', function() {
      it('should call deleteAchievementTemplate successfully', function(done) {
        //uncomment below and update the code to test deleteAchievementTemplate
        //instance.deleteAchievementTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAchievement', function() {
      it('should call getAchievement successfully', function(done) {
        //uncomment below and update the code to test getAchievement
        //instance.getAchievement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAchievementTemplate', function() {
      it('should call getAchievementTemplate successfully', function(done) {
        //uncomment below and update the code to test getAchievementTemplate
        //instance.getAchievementTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAchievementTemplates', function() {
      it('should call getAchievementTemplates successfully', function(done) {
        //uncomment below and update the code to test getAchievementTemplates
        //instance.getAchievementTemplates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAchievementTriggers', function() {
      it('should call getAchievementTriggers successfully', function(done) {
        //uncomment below and update the code to test getAchievementTriggers
        //instance.getAchievementTriggers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAchievements', function() {
      it('should call getAchievements successfully', function(done) {
        //uncomment below and update the code to test getAchievements
        //instance.getAchievements(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDerivedAchievements', function() {
      it('should call getDerivedAchievements successfully', function(done) {
        //uncomment below and update the code to test getDerivedAchievements
        //instance.getDerivedAchievements(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserAchievementProgress', function() {
      it('should call getUserAchievementProgress successfully', function(done) {
        //uncomment below and update the code to test getUserAchievementProgress
        //instance.getUserAchievementProgress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserAchievementsProgress', function() {
      it('should call getUserAchievementsProgress successfully', function(done) {
        //uncomment below and update the code to test getUserAchievementsProgress
        //instance.getUserAchievementsProgress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUsersAchievementProgress', function() {
      it('should call getUsersAchievementProgress successfully', function(done) {
        //uncomment below and update the code to test getUsersAchievementProgress
        //instance.getUsersAchievementProgress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUsersAchievementsProgress', function() {
      it('should call getUsersAchievementsProgress successfully', function(done) {
        //uncomment below and update the code to test getUsersAchievementsProgress
        //instance.getUsersAchievementsProgress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('incrementAchievementProgress', function() {
      it('should call incrementAchievementProgress successfully', function(done) {
        //uncomment below and update the code to test incrementAchievementProgress
        //instance.incrementAchievementProgress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setAchievementProgress', function() {
      it('should call setAchievementProgress successfully', function(done) {
        //uncomment below and update the code to test setAchievementProgress
        //instance.setAchievementProgress(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAchievement', function() {
      it('should call updateAchievement successfully', function(done) {
        //uncomment below and update the code to test updateAchievement
        //instance.updateAchievement(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAchievementTemplate', function() {
      it('should call updateAchievementTemplate successfully', function(done) {
        //uncomment below and update the code to test updateAchievementTemplate
        //instance.updateAchievementTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
