/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KnetikCloud);
  }
}(this, function(expect, KnetikCloud) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KnetikCloud.MediaVideosApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MediaVideosApi', function() {
    describe('addUserToVideoWhitelist', function() {
      it('should call addUserToVideoWhitelist successfully', function(done) {
        //uncomment below and update the code to test addUserToVideoWhitelist
        //instance.addUserToVideoWhitelist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addVideo', function() {
      it('should call addVideo successfully', function(done) {
        //uncomment below and update the code to test addVideo
        //instance.addVideo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addVideoComment', function() {
      it('should call addVideoComment successfully', function(done) {
        //uncomment below and update the code to test addVideoComment
        //instance.addVideoComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addVideoContributor', function() {
      it('should call addVideoContributor successfully', function(done) {
        //uncomment below and update the code to test addVideoContributor
        //instance.addVideoContributor(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addVideoFlag', function() {
      it('should call addVideoFlag successfully', function(done) {
        //uncomment below and update the code to test addVideoFlag
        //instance.addVideoFlag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addVideoRelationships', function() {
      it('should call addVideoRelationships successfully', function(done) {
        //uncomment below and update the code to test addVideoRelationships
        //instance.addVideoRelationships(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createVideoDisposition', function() {
      it('should call createVideoDisposition successfully', function(done) {
        //uncomment below and update the code to test createVideoDisposition
        //instance.createVideoDisposition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createVideoTemplate', function() {
      it('should call createVideoTemplate successfully', function(done) {
        //uncomment below and update the code to test createVideoTemplate
        //instance.createVideoTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteVideo', function() {
      it('should call deleteVideo successfully', function(done) {
        //uncomment below and update the code to test deleteVideo
        //instance.deleteVideo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteVideoComment', function() {
      it('should call deleteVideoComment successfully', function(done) {
        //uncomment below and update the code to test deleteVideoComment
        //instance.deleteVideoComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteVideoDisposition', function() {
      it('should call deleteVideoDisposition successfully', function(done) {
        //uncomment below and update the code to test deleteVideoDisposition
        //instance.deleteVideoDisposition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteVideoFlag', function() {
      it('should call deleteVideoFlag successfully', function(done) {
        //uncomment below and update the code to test deleteVideoFlag
        //instance.deleteVideoFlag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteVideoRelationship', function() {
      it('should call deleteVideoRelationship successfully', function(done) {
        //uncomment below and update the code to test deleteVideoRelationship
        //instance.deleteVideoRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteVideoTemplate', function() {
      it('should call deleteVideoTemplate successfully', function(done) {
        //uncomment below and update the code to test deleteVideoTemplate
        //instance.deleteVideoTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserVideos', function() {
      it('should call getUserVideos successfully', function(done) {
        //uncomment below and update the code to test getUserVideos
        //instance.getUserVideos(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVideo', function() {
      it('should call getVideo successfully', function(done) {
        //uncomment below and update the code to test getVideo
        //instance.getVideo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVideoComments', function() {
      it('should call getVideoComments successfully', function(done) {
        //uncomment below and update the code to test getVideoComments
        //instance.getVideoComments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVideoDispositions', function() {
      it('should call getVideoDispositions successfully', function(done) {
        //uncomment below and update the code to test getVideoDispositions
        //instance.getVideoDispositions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVideoRelationships', function() {
      it('should call getVideoRelationships successfully', function(done) {
        //uncomment below and update the code to test getVideoRelationships
        //instance.getVideoRelationships(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVideoTemplate', function() {
      it('should call getVideoTemplate successfully', function(done) {
        //uncomment below and update the code to test getVideoTemplate
        //instance.getVideoTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVideoTemplates', function() {
      it('should call getVideoTemplates successfully', function(done) {
        //uncomment below and update the code to test getVideoTemplates
        //instance.getVideoTemplates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVideos', function() {
      it('should call getVideos successfully', function(done) {
        //uncomment below and update the code to test getVideos
        //instance.getVideos(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeUserFromVideoWhitelist', function() {
      it('should call removeUserFromVideoWhitelist successfully', function(done) {
        //uncomment below and update the code to test removeUserFromVideoWhitelist
        //instance.removeUserFromVideoWhitelist(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeVideoContributor', function() {
      it('should call removeVideoContributor successfully', function(done) {
        //uncomment below and update the code to test removeVideoContributor
        //instance.removeVideoContributor(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateVideo', function() {
      it('should call updateVideo successfully', function(done) {
        //uncomment below and update the code to test updateVideo
        //instance.updateVideo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateVideoComment', function() {
      it('should call updateVideoComment successfully', function(done) {
        //uncomment below and update the code to test updateVideoComment
        //instance.updateVideoComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateVideoRelationship', function() {
      it('should call updateVideoRelationship successfully', function(done) {
        //uncomment below and update the code to test updateVideoRelationship
        //instance.updateVideoRelationship(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateVideoTemplate', function() {
      it('should call updateVideoTemplate successfully', function(done) {
        //uncomment below and update the code to test updateVideoTemplate
        //instance.updateVideoTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('viewVideo', function() {
      it('should call viewVideo successfully', function(done) {
        //uncomment below and update the code to test viewVideo
        //instance.viewVideo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
