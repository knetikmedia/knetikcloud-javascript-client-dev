/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KnetikCloud);
  }
}(this, function(expect, KnetikCloud) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KnetikCloud.BreRule();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BreRule', function() {
    it('should create an instance of BreRule', function() {
      // uncomment below and update the code to test BreRule
      //var instane = new KnetikCloud.BreRule();
      //expect(instance).to.be.a(KnetikCloud.BreRule);
    });

    it('should have the property actions (base name: "actions")', function() {
      // uncomment below and update the code to test the property actions
      //var instane = new KnetikCloud.BreRule();
      //expect(instance).to.be();
    });

    it('should have the property condition (base name: "condition")', function() {
      // uncomment below and update the code to test the property condition
      //var instane = new KnetikCloud.BreRule();
      //expect(instance).to.be();
    });

    it('should have the property conditionText (base name: "condition_text")', function() {
      // uncomment below and update the code to test the property conditionText
      //var instane = new KnetikCloud.BreRule();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instane = new KnetikCloud.BreRule();
      //expect(instance).to.be();
    });

    it('should have the property enabled (base name: "enabled")', function() {
      // uncomment below and update the code to test the property enabled
      //var instane = new KnetikCloud.BreRule();
      //expect(instance).to.be();
    });

    it('should have the property endDate (base name: "end_date")', function() {
      // uncomment below and update the code to test the property endDate
      //var instane = new KnetikCloud.BreRule();
      //expect(instance).to.be();
    });

    it('should have the property evaluationCount (base name: "evaluation_count")', function() {
      // uncomment below and update the code to test the property evaluationCount
      //var instane = new KnetikCloud.BreRule();
      //expect(instance).to.be();
    });

    it('should have the property eventName (base name: "event_name")', function() {
      // uncomment below and update the code to test the property eventName
      //var instane = new KnetikCloud.BreRule();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new KnetikCloud.BreRule();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new KnetikCloud.BreRule();
      //expect(instance).to.be();
    });

    it('should have the property runCount (base name: "run_count")', function() {
      // uncomment below and update the code to test the property runCount
      //var instane = new KnetikCloud.BreRule();
      //expect(instance).to.be();
    });

    it('should have the property sort (base name: "sort")', function() {
      // uncomment below and update the code to test the property sort
      //var instane = new KnetikCloud.BreRule();
      //expect(instance).to.be();
    });

    it('should have the property startDate (base name: "start_date")', function() {
      // uncomment below and update the code to test the property startDate
      //var instane = new KnetikCloud.BreRule();
      //expect(instance).to.be();
    });

    it('should have the property systemRule (base name: "system_rule")', function() {
      // uncomment below and update the code to test the property systemRule
      //var instane = new KnetikCloud.BreRule();
      //expect(instance).to.be();
    });

  });

}));
