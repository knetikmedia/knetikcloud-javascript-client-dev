/**
 * Knetik Platform API Documentation latest 
 * This is the spec for the Knetik API.  Use this in conjunction with the documentation found at https://knetikcloud.com.
 *
 * OpenAPI spec version: latest 
 * Contact: support@knetik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KnetikCloud);
  }
}(this, function(expect, KnetikCloud) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KnetikCloud.SubscriptionPlan();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SubscriptionPlan', function() {
    it('should create an instance of SubscriptionPlan', function() {
      // uncomment below and update the code to test SubscriptionPlan
      //var instane = new KnetikCloud.SubscriptionPlan();
      //expect(instance).to.be.a(KnetikCloud.SubscriptionPlan);
    });

    it('should have the property additionalProperties (base name: "additional_properties")', function() {
      // uncomment below and update the code to test the property additionalProperties
      //var instane = new KnetikCloud.SubscriptionPlan();
      //expect(instance).to.be();
    });

    it('should have the property availability (base name: "availability")', function() {
      // uncomment below and update the code to test the property availability
      //var instane = new KnetikCloud.SubscriptionPlan();
      //expect(instance).to.be();
    });

    it('should have the property billGraceDays (base name: "bill_grace_days")', function() {
      // uncomment below and update the code to test the property billGraceDays
      //var instane = new KnetikCloud.SubscriptionPlan();
      //expect(instance).to.be();
    });

    it('should have the property consolidated (base name: "consolidated")', function() {
      // uncomment below and update the code to test the property consolidated
      //var instane = new KnetikCloud.SubscriptionPlan();
      //expect(instance).to.be();
    });

    it('should have the property firstBill (base name: "first_bill")', function() {
      // uncomment below and update the code to test the property firstBill
      //var instane = new KnetikCloud.SubscriptionPlan();
      //expect(instance).to.be();
    });

    it('should have the property firstBillUnitOfTime (base name: "first_bill_unit_of_time")', function() {
      // uncomment below and update the code to test the property firstBillUnitOfTime
      //var instane = new KnetikCloud.SubscriptionPlan();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new KnetikCloud.SubscriptionPlan();
      //expect(instance).to.be();
    });

    it('should have the property latePaymentSku (base name: "late_payment_sku")', function() {
      // uncomment below and update the code to test the property latePaymentSku
      //var instane = new KnetikCloud.SubscriptionPlan();
      //expect(instance).to.be();
    });

    it('should have the property locked (base name: "locked")', function() {
      // uncomment below and update the code to test the property locked
      //var instane = new KnetikCloud.SubscriptionPlan();
      //expect(instance).to.be();
    });

    it('should have the property maxAutoRenew (base name: "max_auto_renew")', function() {
      // uncomment below and update the code to test the property maxAutoRenew
      //var instane = new KnetikCloud.SubscriptionPlan();
      //expect(instance).to.be();
    });

    it('should have the property maxBillAttempts (base name: "max_bill_attempts")', function() {
      // uncomment below and update the code to test the property maxBillAttempts
      //var instane = new KnetikCloud.SubscriptionPlan();
      //expect(instance).to.be();
    });

    it('should have the property migrationPlan (base name: "migration_plan")', function() {
      // uncomment below and update the code to test the property migrationPlan
      //var instane = new KnetikCloud.SubscriptionPlan();
      //expect(instance).to.be();
    });

    it('should have the property minimumTerm (base name: "minimum_term")', function() {
      // uncomment below and update the code to test the property minimumTerm
      //var instane = new KnetikCloud.SubscriptionPlan();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new KnetikCloud.SubscriptionPlan();
      //expect(instance).to.be();
    });

    it('should have the property primarySku (base name: "primary_sku")', function() {
      // uncomment below and update the code to test the property primarySku
      //var instane = new KnetikCloud.SubscriptionPlan();
      //expect(instance).to.be();
    });

    it('should have the property reactivationSku (base name: "reactivation_sku")', function() {
      // uncomment below and update the code to test the property reactivationSku
      //var instane = new KnetikCloud.SubscriptionPlan();
      //expect(instance).to.be();
    });

    it('should have the property recurringSku (base name: "recurring_sku")', function() {
      // uncomment below and update the code to test the property recurringSku
      //var instane = new KnetikCloud.SubscriptionPlan();
      //expect(instance).to.be();
    });

    it('should have the property renewPeriod (base name: "renew_period")', function() {
      // uncomment below and update the code to test the property renewPeriod
      //var instane = new KnetikCloud.SubscriptionPlan();
      //expect(instance).to.be();
    });

    it('should have the property renewPeriodUnitOfTime (base name: "renew_period_unit_of_time")', function() {
      // uncomment below and update the code to test the property renewPeriodUnitOfTime
      //var instane = new KnetikCloud.SubscriptionPlan();
      //expect(instance).to.be();
    });

    it('should have the property subscriptionId (base name: "subscription_id")', function() {
      // uncomment below and update the code to test the property subscriptionId
      //var instane = new KnetikCloud.SubscriptionPlan();
      //expect(instance).to.be();
    });

  });

}));
